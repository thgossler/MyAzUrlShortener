@inherits LayoutComponentBase
@using AzUrlShortener.TinyBlazorAdmin
@using AzUrlShortener.TinyBlazorAdmin.Components
@using AzUrlShortener.TinyBlazorAdmin.Components.Shared
@using AzUrlShortener.TinyBlazorAdmin.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Authentication.OpenIdConnect
@using System.Timers
@inject IHttpContextAccessor HttpContextAccessor
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@inject UserService UserService
@inject AuthenticationStateProvider AuthenticationStateProvider

<FluentLayout>
    <FluentHeader>
        <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="10" Style="align-items: center">
            <a href="/" style="text-decoration: none; color: inherit; cursor: pointer; font-size: larger;">URL Shortener</a>
            <div style="flex-grow: 1"></div>
            <FluentIcon Value="@(new Icons.Regular.Size20.Person())" Color="Color.Fill" />
            <FluentLabel Color="Color.Fill" class="me-2">
                @(username + (isAdmin ? " (Admin)" : ""))
            </FluentLabel>
            <SwitchAccountButton />
        </FluentStack>
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <div class="content position-relative">
                @Body
            </div>
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter>
        <div class="link1">
            <a href="https://github.com/thgossler/MyAzUrlShortener" target="_blank">GitHub</a>
        </div>
    </FluentFooter>
</FluentLayout>

<FluentDialogProvider @rendermode="RenderMode.InteractiveServer" />
<FluentToastProvider @rendermode="RenderMode.InteractiveServer" />
<FluentTooltipProvider @rendermode="RenderMode.InteractiveServer" />

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool isAdmin;
    private string username = "Unknown";

    protected override async Task OnInitializedAsync()
    {
        isAdmin = await UserService.IsAdminAsync();
        username = await UserService.GetUserPrincipalNameAsync();
    }
}
